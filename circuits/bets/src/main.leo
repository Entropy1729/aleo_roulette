import hashing.poseidon;


//rand_bit_field is the factorization of the poseidon hash of the rand_seed
function main(bet_number: field, rand_seed: field, rand_bit_field: [field;254]) -> bool {
    let calculated_rand_fe = poseidon(rand_seed, rand_seed);
    let derived_rand_fe = field_from_bitfield(rand_bit_field);
    if calculated_rand_fe == derived_rand_fe {
        let spinned_number = spin_roulette_from_rand_bit_field(rand_bit_field);
        return true;
    } else {
        return false;
    }
}

function spin_roulette_from_rand_bit_field(rand_bit_field: [field;254]) -> u32{
    let rand_six_bits: u32 = six_bits_int_from_bitfield(rand_bit_field);
    // Modulus 32 operator
    return rand_six_bits - (rand_six_bits / 37 * 37);
}

function six_bits_int_from_bitfield(bit_field: [field;254]) -> u32 {
    let number: u32 = 0;
    for i in 0..6{
        if bit_field[253-i] == 1 {
            number = number + (2**(i));
        }
    }
    return number;
}

function field_from_bitfield(bit_field: [field;254]) -> field{
    let number: field = 0;
    number = number + bit_field[253]*1;
    number = number + bit_field[252]*2;
    number = number + bit_field[251]*4;
    number = number + bit_field[250]*8;
    number = number + bit_field[249]*16;
    number = number + bit_field[248]*32;
    number = number + bit_field[247]*64;
    number = number + bit_field[246]*128;
    number = number + bit_field[245]*256;
    number = number + bit_field[244]*512;
    number = number + bit_field[243]*1024;
    number = number + bit_field[242]*2048;
    number = number + bit_field[241]*4096;
    number = number + bit_field[240]*8192;
    number = number + bit_field[239]*16384;
    number = number + bit_field[238]*32768;
    number = number + bit_field[237]*65536;
    number = number + bit_field[236]*131072;
    number = number + bit_field[235]*262144;
    number = number + bit_field[234]*524288;
    number = number + bit_field[233]*1048576;
    number = number + bit_field[232]*2097152;
    number = number + bit_field[231]*4194304;
    number = number + bit_field[230]*8388608;
    number = number + bit_field[229]*16777216;
    number = number + bit_field[228]*33554432;
    number = number + bit_field[227]*67108864;
    number = number + bit_field[226]*134217728;
    number = number + bit_field[225]*268435456;
    number = number + bit_field[224]*536870912;
    number = number + bit_field[223]*1073741824;
    number = number + bit_field[222]*2147483648;
    number = number + bit_field[221]*4294967296;
    number = number + bit_field[220]*8589934592;
    number = number + bit_field[219]*17179869184;
    number = number + bit_field[218]*34359738368;
    number = number + bit_field[217]*68719476736;
    number = number + bit_field[216]*137438953472;
    number = number + bit_field[215]*274877906944;
    number = number + bit_field[214]*549755813888;
    number = number + bit_field[213]*1099511627776;
    number = number + bit_field[212]*2199023255552;
    number = number + bit_field[211]*4398046511104;
    number = number + bit_field[210]*8796093022208;
    number = number + bit_field[209]*17592186044416;
    number = number + bit_field[208]*35184372088832;
    number = number + bit_field[207]*70368744177664;
    number = number + bit_field[206]*140737488355328;
    number = number + bit_field[205]*281474976710656;
    number = number + bit_field[204]*562949953421312;
    number = number + bit_field[203]*1125899906842624;
    number = number + bit_field[202]*2251799813685248;
    number = number + bit_field[201]*4503599627370496;
    number = number + bit_field[200]*9007199254740992;
    number = number + bit_field[199]*18014398509481984;
    number = number + bit_field[198]*36028797018963968;
    number = number + bit_field[197]*72057594037927936;
    number = number + bit_field[196]*144115188075855872;
    number = number + bit_field[195]*288230376151711744;
    number = number + bit_field[194]*576460752303423488;
    number = number + bit_field[193]*1152921504606846976;
    number = number + bit_field[192]*2305843009213693952;
    number = number + bit_field[191]*4611686018427387904;
    number = number + bit_field[190]*9223372036854775808;
    number = number + bit_field[189]*18446744073709551616;
    number = number + bit_field[188]*36893488147419103232;
    number = number + bit_field[187]*73786976294838206464;
    number = number + bit_field[186]*147573952589676412928;
    number = number + bit_field[185]*295147905179352825856;
    number = number + bit_field[184]*590295810358705651712;
    number = number + bit_field[183]*1180591620717411303424;
    number = number + bit_field[182]*2361183241434822606848;
    number = number + bit_field[181]*4722366482869645213696;
    number = number + bit_field[180]*9444732965739290427392;
    number = number + bit_field[179]*18889465931478580854784;
    number = number + bit_field[178]*37778931862957161709568;
    number = number + bit_field[177]*75557863725914323419136;
    number = number + bit_field[176]*151115727451828646838272;
    number = number + bit_field[175]*302231454903657293676544;
    number = number + bit_field[174]*604462909807314587353088;
    number = number + bit_field[173]*1208925819614629174706176;
    number = number + bit_field[172]*2417851639229258349412352;
    number = number + bit_field[171]*4835703278458516698824704;
    number = number + bit_field[170]*9671406556917033397649408;
    number = number + bit_field[169]*19342813113834066795298816;
    number = number + bit_field[168]*38685626227668133590597632;
    number = number + bit_field[167]*77371252455336267181195264;
    number = number + bit_field[166]*154742504910672534362390528;
    number = number + bit_field[165]*309485009821345068724781056;
    number = number + bit_field[164]*618970019642690137449562112;
    number = number + bit_field[163]*1237940039285380274899124224;
    number = number + bit_field[162]*2475880078570760549798248448;
    number = number + bit_field[161]*4951760157141521099596496896;
    number = number + bit_field[160]*9903520314283042199192993792;
    number = number + bit_field[159]*19807040628566084398385987584;
    number = number + bit_field[158]*39614081257132168796771975168;
    number = number + bit_field[157]*79228162514264337593543950336;
    number = number + bit_field[156]*158456325028528675187087900672;
    number = number + bit_field[155]*316912650057057350374175801344;
    number = number + bit_field[154]*633825300114114700748351602688;
    number = number + bit_field[153]*1267650600228229401496703205376;
    number = number + bit_field[152]*2535301200456458802993406410752;
    number = number + bit_field[151]*5070602400912917605986812821504;
    number = number + bit_field[150]*10141204801825835211973625643008;
    number = number + bit_field[149]*20282409603651670423947251286016;
    number = number + bit_field[148]*40564819207303340847894502572032;
    number = number + bit_field[147]*81129638414606681695789005144064;
    number = number + bit_field[146]*162259276829213363391578010288128;
    number = number + bit_field[145]*324518553658426726783156020576256;
    number = number + bit_field[144]*649037107316853453566312041152512;
    number = number + bit_field[143]*1298074214633706907132624082305024;
    number = number + bit_field[142]*2596148429267413814265248164610048;
    number = number + bit_field[141]*5192296858534827628530496329220096;
    number = number + bit_field[140]*10384593717069655257060992658440192;
    number = number + bit_field[139]*20769187434139310514121985316880384;
    number = number + bit_field[138]*41538374868278621028243970633760768;
    number = number + bit_field[137]*83076749736557242056487941267521536;
    number = number + bit_field[136]*166153499473114484112975882535043072;
    number = number + bit_field[135]*332306998946228968225951765070086144;
    number = number + bit_field[134]*664613997892457936451903530140172288;
    number = number + bit_field[133]*1329227995784915872903807060280344576;
    number = number + bit_field[132]*2658455991569831745807614120560689152;
    number = number + bit_field[131]*5316911983139663491615228241121378304;
    number = number + bit_field[130]*10633823966279326983230456482242756608;
    number = number + bit_field[129]*21267647932558653966460912964485513216;
    number = number + bit_field[128]*42535295865117307932921825928971026432;
    number = number + bit_field[127]*85070591730234615865843651857942052864;
    number = number + bit_field[126]*170141183460469231731687303715884105728;
    number = number + bit_field[125]*340282366920938463463374607431768211456;
    number = number + bit_field[124]*680564733841876926926749214863536422912;
    number = number + bit_field[123]*1361129467683753853853498429727072845824;
    number = number + bit_field[122]*2722258935367507707706996859454145691648;
    number = number + bit_field[121]*5444517870735015415413993718908291383296;
    number = number + bit_field[120]*10889035741470030830827987437816582766592;
    number = number + bit_field[119]*21778071482940061661655974875633165533184;
    number = number + bit_field[118]*43556142965880123323311949751266331066368;
    number = number + bit_field[117]*87112285931760246646623899502532662132736;
    number = number + bit_field[116]*174224571863520493293247799005065324265472;
    number = number + bit_field[115]*348449143727040986586495598010130648530944;
    number = number + bit_field[114]*696898287454081973172991196020261297061888;
    number = number + bit_field[113]*1393796574908163946345982392040522594123776;
    number = number + bit_field[112]*2787593149816327892691964784081045188247552;
    number = number + bit_field[111]*5575186299632655785383929568162090376495104;
    number = number + bit_field[110]*11150372599265311570767859136324180752990208;
    number = number + bit_field[109]*22300745198530623141535718272648361505980416;
    number = number + bit_field[108]*44601490397061246283071436545296723011960832;
    number = number + bit_field[107]*89202980794122492566142873090593446023921664;
    number = number + bit_field[106]*178405961588244985132285746181186892047843328;
    number = number + bit_field[105]*356811923176489970264571492362373784095686656;
    number = number + bit_field[104]*713623846352979940529142984724747568191373312;
    number = number + bit_field[103]*1427247692705959881058285969449495136382746624;
    number = number + bit_field[102]*2854495385411919762116571938898990272765493248;
    number = number + bit_field[101]*5708990770823839524233143877797980545530986496;
    number = number + bit_field[100]*11417981541647679048466287755595961091061972992;
    number = number + bit_field[99]*22835963083295358096932575511191922182123945984;
    number = number + bit_field[98]*45671926166590716193865151022383844364247891968;
    number = number + bit_field[97]*91343852333181432387730302044767688728495783936;
    number = number + bit_field[96]*182687704666362864775460604089535377456991567872;
    number = number + bit_field[95]*365375409332725729550921208179070754913983135744;
    number = number + bit_field[94]*730750818665451459101842416358141509827966271488;
    number = number + bit_field[93]*1461501637330902918203684832716283019655932542976;
    number = number + bit_field[92]*2923003274661805836407369665432566039311865085952;
    number = number + bit_field[91]*5846006549323611672814739330865132078623730171904;
    number = number + bit_field[90]*11692013098647223345629478661730264157247460343808;
    number = number + bit_field[89]*23384026197294446691258957323460528314494920687616;
    number = number + bit_field[88]*46768052394588893382517914646921056628989841375232;
    number = number + bit_field[87]*93536104789177786765035829293842113257979682750464;
    number = number + bit_field[86]*187072209578355573530071658587684226515959365500928;
    number = number + bit_field[85]*374144419156711147060143317175368453031918731001856;
    number = number + bit_field[84]*748288838313422294120286634350736906063837462003712;
    number = number + bit_field[83]*1496577676626844588240573268701473812127674924007424;
    number = number + bit_field[82]*2993155353253689176481146537402947624255349848014848;
    number = number + bit_field[81]*5986310706507378352962293074805895248510699696029696;
    number = number + bit_field[80]*11972621413014756705924586149611790497021399392059392;
    number = number + bit_field[79]*23945242826029513411849172299223580994042798784118784;
    number = number + bit_field[78]*47890485652059026823698344598447161988085597568237568;
    number = number + bit_field[77]*95780971304118053647396689196894323976171195136475136;
    number = number + bit_field[76]*191561942608236107294793378393788647952342390272950272;
    number = number + bit_field[75]*383123885216472214589586756787577295904684780545900544;
    number = number + bit_field[74]*766247770432944429179173513575154591809369561091801088;
    number = number + bit_field[73]*1532495540865888858358347027150309183618739122183602176;
    number = number + bit_field[72]*3064991081731777716716694054300618367237478244367204352;
    number = number + bit_field[71]*6129982163463555433433388108601236734474956488734408704;
    number = number + bit_field[70]*12259964326927110866866776217202473468949912977468817408;
    number = number + bit_field[69]*24519928653854221733733552434404946937899825954937634816;
    number = number + bit_field[68]*49039857307708443467467104868809893875799651909875269632;
    number = number + bit_field[67]*98079714615416886934934209737619787751599303819750539264;
    number = number + bit_field[66]*196159429230833773869868419475239575503198607639501078528;
    number = number + bit_field[65]*392318858461667547739736838950479151006397215279002157056;
    number = number + bit_field[64]*784637716923335095479473677900958302012794430558004314112;
    number = number + bit_field[63]*1569275433846670190958947355801916604025588861116008628224;
    number = number + bit_field[62]*3138550867693340381917894711603833208051177722232017256448;
    number = number + bit_field[61]*6277101735386680763835789423207666416102355444464034512896;
    number = number + bit_field[60]*12554203470773361527671578846415332832204710888928069025792;
    number = number + bit_field[59]*25108406941546723055343157692830665664409421777856138051584;
    number = number + bit_field[58]*50216813883093446110686315385661331328818843555712276103168;
    number = number + bit_field[57]*100433627766186892221372630771322662657637687111424552206336;
    number = number + bit_field[56]*200867255532373784442745261542645325315275374222849104412672;
    number = number + bit_field[55]*401734511064747568885490523085290650630550748445698208825344;
    number = number + bit_field[54]*803469022129495137770981046170581301261101496891396417650688;
    number = number + bit_field[53]*1606938044258990275541962092341162602522202993782792835301376;
    number = number + bit_field[52]*3213876088517980551083924184682325205044405987565585670602752;
    number = number + bit_field[51]*6427752177035961102167848369364650410088811975131171341205504;
    number = number + bit_field[50]*12855504354071922204335696738729300820177623950262342682411008;
    number = number + bit_field[49]*25711008708143844408671393477458601640355247900524685364822016;
    number = number + bit_field[48]*51422017416287688817342786954917203280710495801049370729644032;
    number = number + bit_field[47]*102844034832575377634685573909834406561420991602098741459288064;
    number = number + bit_field[46]*205688069665150755269371147819668813122841983204197482918576128;
    number = number + bit_field[45]*411376139330301510538742295639337626245683966408394965837152256;
    number = number + bit_field[44]*822752278660603021077484591278675252491367932816789931674304512;
    number = number + bit_field[43]*1645504557321206042154969182557350504982735865633579863348609024;
    number = number + bit_field[42]*3291009114642412084309938365114701009965471731267159726697218048;
    number = number + bit_field[41]*6582018229284824168619876730229402019930943462534319453394436096;
    number = number + bit_field[40]*13164036458569648337239753460458804039861886925068638906788872192;
    number = number + bit_field[39]*26328072917139296674479506920917608079723773850137277813577744384;
    number = number + bit_field[38]*52656145834278593348959013841835216159447547700274555627155488768;
    number = number + bit_field[37]*105312291668557186697918027683670432318895095400549111254310977536;
    number = number + bit_field[36]*210624583337114373395836055367340864637790190801098222508621955072;
    number = number + bit_field[35]*421249166674228746791672110734681729275580381602196445017243910144;
    number = number + bit_field[34]*842498333348457493583344221469363458551160763204392890034487820288;
    number = number + bit_field[33]*1684996666696914987166688442938726917102321526408785780068975640576;
    number = number + bit_field[32]*3369993333393829974333376885877453834204643052817571560137951281152;
    number = number + bit_field[31]*6739986666787659948666753771754907668409286105635143120275902562304;
    number = number + bit_field[30]*13479973333575319897333507543509815336818572211270286240551805124608;
    number = number + bit_field[29]*26959946667150639794667015087019630673637144422540572481103610249216;
    number = number + bit_field[28]*53919893334301279589334030174039261347274288845081144962207220498432;
    number = number + bit_field[27]*107839786668602559178668060348078522694548577690162289924414440996864;
    number = number + bit_field[26]*215679573337205118357336120696157045389097155380324579848828881993728;
    number = number + bit_field[25]*431359146674410236714672241392314090778194310760649159697657763987456;
    number = number + bit_field[24]*862718293348820473429344482784628181556388621521298319395315527974912;
    number = number + bit_field[23]*1725436586697640946858688965569256363112777243042596638790631055949824;
    number = number + bit_field[22]*3450873173395281893717377931138512726225554486085193277581262111899648;
    number = number + bit_field[21]*6901746346790563787434755862277025452451108972170386555162524223799296;
    number = number + bit_field[20]*13803492693581127574869511724554050904902217944340773110325048447598592;
    number = number + bit_field[19]*27606985387162255149739023449108101809804435888681546220650096895197184;
    number = number + bit_field[18]*55213970774324510299478046898216203619608871777363092441300193790394368;
    number = number + bit_field[17]*110427941548649020598956093796432407239217743554726184882600387580788736;
    number = number + bit_field[16]*220855883097298041197912187592864814478435487109452369765200775161577472;
    number = number + bit_field[15]*441711766194596082395824375185729628956870974218904739530401550323154944;
    number = number + bit_field[14]*883423532389192164791648750371459257913741948437809479060803100646309888;
    number = number + bit_field[13]*1766847064778384329583297500742918515827483896875618958121606201292619776;
    number = number + bit_field[12]*3533694129556768659166595001485837031654967793751237916243212402585239552;
    number = number + bit_field[11]*7067388259113537318333190002971674063309935587502475832486424805170479104;
    number = number + bit_field[10]*14134776518227074636666380005943348126619871175004951664972849610340958208;
    number = number + bit_field[9]*28269553036454149273332760011886696253239742350009903329945699220681916416;
    number = number + bit_field[8]*56539106072908298546665520023773392506479484700019806659891398441363832832;
    number = number + bit_field[7]*113078212145816597093331040047546785012958969400039613319782796882727665664;
    number = number + bit_field[6]*226156424291633194186662080095093570025917938800079226639565593765455331328;
    number = number + bit_field[5]*452312848583266388373324160190187140051835877600158453279131187530910662656;
    number = number + bit_field[4]*904625697166532776746648320380374280103671755200316906558262375061821325312;
    number = number + bit_field[3]*1809251394333065553493296640760748560207343510400633813116524750123642650624;
    number = number + bit_field[2]*3618502788666131106986593281521497120414687020801267626233049500247285301248;
    number = number + bit_field[1]*7237005577332262213973186563042994240829374041602535252466099000494570602496;
    number = number + bit_field[0]*14474011154664524427946373126085988481658748083205070504932198000989141204992;
    return number;
}

@test
function test_roulette_number () {
    let rand_bit_field: [field; 254] = [0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1,
       1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0,
       0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0,
       1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1,
       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1,
       0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0,
       1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0,
       1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0,
       0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0,
       1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1,
       0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0,
       0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1];

    console.assert(spin_roulette_from_rand_bit_field(rand_bit_field) < 38);
}
